// <auto-generated />
using System;
using LoyaltyCards.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoyaltyCards.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250725121513_UpdateUserEncryptionKeyRelation")]
    partial class UpdateUserEncryptionKeyRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("LoyaltyCards.Server.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("LoyaltyCards.Server.Models.LoyaltyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNonce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardTag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedCardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedPin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PinNonce")
                        .HasColumnType("TEXT");

                    b.Property<string>("PinTag")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("LoyaltyCards");
                });

            modelBuilder.Entity("LoyaltyCards.Server.Models.UserEncryptionKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("UserEncryptionKeys");
                });

            modelBuilder.Entity("LoyaltyCards.Server.Models.LoyaltyCard", b =>
                {
                    b.HasOne("LoyaltyCards.Server.Models.AppUser", "AppUser")
                        .WithMany("LoyaltyCards")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("LoyaltyCards.Server.Models.UserEncryptionKey", b =>
                {
                    b.HasOne("LoyaltyCards.Server.Models.AppUser", "AppUser")
                        .WithOne("UserEncryptionKey")
                        .HasForeignKey("LoyaltyCards.Server.Models.UserEncryptionKey", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("LoyaltyCards.Server.Models.AppUser", b =>
                {
                    b.Navigation("LoyaltyCards");

                    b.Navigation("UserEncryptionKey")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
